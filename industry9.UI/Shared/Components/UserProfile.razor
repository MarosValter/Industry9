@inject IdentityAuthenticationStateProvider AuthStateProvider

<AuthorizeView>
    <Authorized>
        @*<MatTooltip Tooltip="Profile">*@
            @*<div class="drawer-profile">*@
                <MatIconButton Icon="account_circle" Link="/account/profile"></MatIconButton>
                @if (_userInfo == null)
                {
                    <div class="spinner-border spinner-border-sm" role="status"></div>
                }
                else
                {
                    <span class="miniHover"><b><a href="/account/profile">@_userInfo.UserName</a></b></span>
                }
            @*</div>*@
        @*</MatTooltip>*@
    </Authorized>
</AuthorizeView>

@code {
    public bool IsLoggedIn = false;
    UserInfoData _userInfo;

    [CascadingParameter]
    Task<AuthenticationState> AuthenticationStateTask { get; set; }

    protected override async Task OnParametersSetAsync()
    {
        _userInfo = null;
        var user = (await AuthenticationStateTask).User;

        if (user.Identity.IsAuthenticated)
        {
            _userInfo = await AuthStateProvider.GetUserInfo();
        }
    }
}
@page "/widgets"
@inherits Fluxor.Blazor.Web.Components.FluxorComponent
@using industry9.Common.Enums
@using industry9.Client.Data.Store.Features.Widget.Actions

@inject IDispatcher Dispatcher
@inject IState<WidgetState> State

<div class="mat-layout-grid">
    <div class="mat-layout-grid-inner">
        @foreach (var widget in State.Value.Widgets)
        {
        <div class="mat-layout-grid-cell mat-layout-grid-cell-span-3">
            <WidgetCard @key="@widget" Widget="@widget" OnConfigure="@EditWidget" OnDelete="@DeleteWidget"></WidgetCard>
        </div>
        }
    </div>
</div>

<MatFAB Icon="@MatIconNames.Add" Class="btn-edit-primary" OnClick="@AddWidget"></MatFAB>

<WidgetDialog EditedObject="@State.Value.EditedObject" @bind-IsOpen="@_isDialogOpen" Operation="@_operation"></WidgetDialog>

@code {
    bool _isDialogOpen;
    CRUDOperation _operation;

    protected override void OnInitialized()
    {
        base.OnInitialized();
        Dispatcher.Dispatch(new FetchWidgetsAction());
    }

    void AddWidget()
    {
        _operation = CRUDOperation.Create;
        Dispatcher.Dispatch(new InitWidgetAction(null));
        _isDialogOpen = true;
    }

    void EditWidget(string id)
    {
        _operation = CRUDOperation.Update;
        Dispatcher.Dispatch(new InitWidgetAction(id));
        _isDialogOpen = true;
    }

    void DeleteWidget(string id)
    {
        _operation = CRUDOperation.Delete;
        Dispatcher.Dispatch(new InitWidgetAction(id));
        _isDialogOpen = true;
    }
}
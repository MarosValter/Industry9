@using industry9.Client.Data.Dto.Widget

@*<MatTable Items="@Rows">
    <MatTableHeader>
        @foreach (var column in ColumnMappings)
        {
            <th>@column.Name</th>
        }
        <th>Time</th>
    </MatTableHeader>
    <MatTableRow>
        @foreach (var column in ColumnMappings)
        {
            var data = context.Columns.TryGetValue(column.SourceColumn, out var value) ? value : null;
            <td>@data?.Value.ToString(column.Format)</td>
        }
        <td>@context.TimeStamp.ToString("HH:mm:ss")</td>
    </MatTableRow>
</MatTable>*@

@code {
    //[Parameter]
    //public IReadOnlyCollection<ISensorData> Data { get; set; } = new List<ISensorData>();

    [Parameter]
    public IReadOnlyCollection<ColumnMappingData> ColumnMappings { get; set; } = new List<ColumnMappingData>();

    //IReadOnlyCollection<RowData> Rows => Data.GroupBy(x => x.Timestamp.Second).Select(x => new RowData(x.First().Timestamp.LocalDateTime, x.ToList())).ToList();

    class RowData
    {
        public DateTime TimeStamp { get; }
        //public IDictionary<string, ISensorData> Columns { get; }

        //public RowData(DateTime timeStamp, ICollection<ISensorData> columns)
        //{
        //    TimeStamp = timeStamp;
        //    Columns = columns.ToDictionary(x => x.Name);
        //}
    }
}

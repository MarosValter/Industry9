// <auto-generated/>
#nullable enable

namespace industry9.Client.Data.GraphQL.Generated.State
{
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "11.2.2.0")]
    public partial class GetDataSourceDefinitionResultFactory : global::StrawberryShake.IOperationResultDataFactory<global::industry9.Client.Data.GraphQL.Generated.GetDataSourceDefinitionResult>
    {
        private readonly global::StrawberryShake.IEntityStore _entityStore;
        private readonly global::StrawberryShake.IEntityMapper<global::industry9.Client.Data.GraphQL.Generated.State.DataSourceDefinitionEntity, GetDataSourceDefinition_DataSourceDefinition_DataSourceDefinition> _getDataSourceDefinition_DataSourceDefinition_DataSourceDefinitionFromDataSourceDefinitionEntityMapper;
        public GetDataSourceDefinitionResultFactory(global::StrawberryShake.IEntityStore entityStore, global::StrawberryShake.IEntityMapper<global::industry9.Client.Data.GraphQL.Generated.State.DataSourceDefinitionEntity, GetDataSourceDefinition_DataSourceDefinition_DataSourceDefinition> getDataSourceDefinition_DataSourceDefinition_DataSourceDefinitionFromDataSourceDefinitionEntityMapper)
        {
            _entityStore = entityStore ?? throw new global::System.ArgumentNullException(nameof(entityStore));
            _getDataSourceDefinition_DataSourceDefinition_DataSourceDefinitionFromDataSourceDefinitionEntityMapper = getDataSourceDefinition_DataSourceDefinition_DataSourceDefinitionFromDataSourceDefinitionEntityMapper ?? throw new global::System.ArgumentNullException(nameof(getDataSourceDefinition_DataSourceDefinition_DataSourceDefinitionFromDataSourceDefinitionEntityMapper));
        }

        global::System.Type global::StrawberryShake.IOperationResultDataFactory.ResultType => typeof(global::industry9.Client.Data.GraphQL.Generated.IGetDataSourceDefinitionResult);
        public GetDataSourceDefinitionResult Create(global::StrawberryShake.IOperationResultDataInfo dataInfo, global::StrawberryShake.IEntityStoreSnapshot? snapshot = null)
        {
            if (snapshot is null)
            {
                snapshot = _entityStore.CurrentSnapshot;
            }

            if (dataInfo is GetDataSourceDefinitionResultInfo info)
            {
                return new GetDataSourceDefinitionResult(MapNonNullableIGetDataSourceDefinition_DataSourceDefinition(info.DataSourceDefinition, snapshot));
            }

            throw new global::System.ArgumentException("GetDataSourceDefinitionResultInfo expected.");
        }

        private global::industry9.Client.Data.GraphQL.Generated.IGetDataSourceDefinition_DataSourceDefinition MapNonNullableIGetDataSourceDefinition_DataSourceDefinition(global::StrawberryShake.EntityId entityId, global::StrawberryShake.IEntityStoreSnapshot snapshot)
        {
            if (entityId.Name.Equals("DataSourceDefinition", global::System.StringComparison.Ordinal))
            {
                return _getDataSourceDefinition_DataSourceDefinition_DataSourceDefinitionFromDataSourceDefinitionEntityMapper.Map(snapshot.GetEntity<global::industry9.Client.Data.GraphQL.Generated.State.DataSourceDefinitionEntity>(entityId) ?? throw new global::StrawberryShake.GraphQLClientException());
            }

            throw new global::System.NotSupportedException();
        }

        global::System.Object global::StrawberryShake.IOperationResultDataFactory.Create(global::StrawberryShake.IOperationResultDataInfo dataInfo, global::StrawberryShake.IEntityStoreSnapshot? snapshot)
        {
            return Create(dataInfo, snapshot);
        }
    }
}

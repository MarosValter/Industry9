// <auto-generated/>
#nullable enable

namespace industry9.Client.Data.GraphQL.Generated.State
{
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "11.2.2.0")]
    public partial class GetDashboardResultFactory : global::StrawberryShake.IOperationResultDataFactory<global::industry9.Client.Data.GraphQL.Generated.GetDashboardResult>
    {
        private readonly global::StrawberryShake.IEntityStore _entityStore;
        private readonly global::StrawberryShake.IEntityMapper<global::industry9.Client.Data.GraphQL.Generated.State.DashboardEntity, GetDashboard_Dashboard_Dashboard> _getDashboard_Dashboard_DashboardFromDashboardEntityMapper;
        public GetDashboardResultFactory(global::StrawberryShake.IEntityStore entityStore, global::StrawberryShake.IEntityMapper<global::industry9.Client.Data.GraphQL.Generated.State.DashboardEntity, GetDashboard_Dashboard_Dashboard> getDashboard_Dashboard_DashboardFromDashboardEntityMapper)
        {
            _entityStore = entityStore ?? throw new global::System.ArgumentNullException(nameof(entityStore));
            _getDashboard_Dashboard_DashboardFromDashboardEntityMapper = getDashboard_Dashboard_DashboardFromDashboardEntityMapper ?? throw new global::System.ArgumentNullException(nameof(getDashboard_Dashboard_DashboardFromDashboardEntityMapper));
        }

        global::System.Type global::StrawberryShake.IOperationResultDataFactory.ResultType => typeof(global::industry9.Client.Data.GraphQL.Generated.IGetDashboardResult);
        public GetDashboardResult Create(global::StrawberryShake.IOperationResultDataInfo dataInfo, global::StrawberryShake.IEntityStoreSnapshot? snapshot = null)
        {
            if (snapshot is null)
            {
                snapshot = _entityStore.CurrentSnapshot;
            }

            if (dataInfo is GetDashboardResultInfo info)
            {
                return new GetDashboardResult(MapNonNullableIGetDashboard_Dashboard(info.Dashboard, snapshot));
            }

            throw new global::System.ArgumentException("GetDashboardResultInfo expected.");
        }

        private global::industry9.Client.Data.GraphQL.Generated.IGetDashboard_Dashboard MapNonNullableIGetDashboard_Dashboard(global::StrawberryShake.EntityId entityId, global::StrawberryShake.IEntityStoreSnapshot snapshot)
        {
            if (entityId.Name.Equals("Dashboard", global::System.StringComparison.Ordinal))
            {
                return _getDashboard_Dashboard_DashboardFromDashboardEntityMapper.Map(snapshot.GetEntity<global::industry9.Client.Data.GraphQL.Generated.State.DashboardEntity>(entityId) ?? throw new global::StrawberryShake.GraphQLClientException());
            }

            throw new global::System.NotSupportedException();
        }

        global::System.Object global::StrawberryShake.IOperationResultDataFactory.Create(global::StrawberryShake.IOperationResultDataInfo dataInfo, global::StrawberryShake.IEntityStoreSnapshot? snapshot)
        {
            return Create(dataInfo, snapshot);
        }
    }
}

// <auto-generated/>
#nullable enable

namespace industry9.Client.Data.GraphQL.Generated.State
{
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "11.2.2.0")]
    public partial class GetDataSourceDefinitions_DataSourceDefinitions_DataSourceDefinitionFromDataSourceDefinitionEntityMapper : global::StrawberryShake.IEntityMapper<global::industry9.Client.Data.GraphQL.Generated.State.DataSourceDefinitionEntity, GetDataSourceDefinitions_DataSourceDefinitions_DataSourceDefinition>
    {
        private readonly global::StrawberryShake.IEntityStore _entityStore;
        public GetDataSourceDefinitions_DataSourceDefinitions_DataSourceDefinitionFromDataSourceDefinitionEntityMapper(global::StrawberryShake.IEntityStore entityStore)
        {
            _entityStore = entityStore ?? throw new global::System.ArgumentNullException(nameof(entityStore));
        }

        public GetDataSourceDefinitions_DataSourceDefinitions_DataSourceDefinition Map(global::industry9.Client.Data.GraphQL.Generated.State.DataSourceDefinitionEntity entity, global::StrawberryShake.IEntityStoreSnapshot? snapshot = null)
        {
            if (snapshot is null)
            {
                snapshot = _entityStore.CurrentSnapshot;
            }

            return new GetDataSourceDefinitions_DataSourceDefinitions_DataSourceDefinition(entity.Id, entity.Name, entity.Created, entity.Type, MapIGetDataSourceDefinitions_DataSourceDefinitions_ColumnsArray(entity.Columns, snapshot));
        }

        private global::System.Collections.Generic.IReadOnlyList<global::industry9.Client.Data.GraphQL.Generated.IGetDataSourceDefinitions_DataSourceDefinitions_Columns?>? MapIGetDataSourceDefinitions_DataSourceDefinitions_ColumnsArray(global::System.Collections.Generic.IReadOnlyList<global::industry9.Client.Data.GraphQL.Generated.State.ExportedColumnDataData?>? list, global::StrawberryShake.IEntityStoreSnapshot snapshot)
        {
            if (list is null)
            {
                return null;
            }

            var exportedColumnDatas = new global::System.Collections.Generic.List<global::industry9.Client.Data.GraphQL.Generated.IGetDataSourceDefinitions_DataSourceDefinitions_Columns?>();
            foreach (global::industry9.Client.Data.GraphQL.Generated.State.ExportedColumnDataData? child in list)
            {
                exportedColumnDatas.Add(MapIGetDataSourceDefinitions_DataSourceDefinitions_Columns(child, snapshot));
            }

            return exportedColumnDatas;
        }

        private global::industry9.Client.Data.GraphQL.Generated.IGetDataSourceDefinitions_DataSourceDefinitions_Columns? MapIGetDataSourceDefinitions_DataSourceDefinitions_Columns(global::industry9.Client.Data.GraphQL.Generated.State.ExportedColumnDataData? data, global::StrawberryShake.IEntityStoreSnapshot snapshot)
        {
            if (data is null)
            {
                return null;
            }

            IGetDataSourceDefinitions_DataSourceDefinitions_Columns returnValue = default !;
            if (data?.__typename.Equals("ExportedColumnData", global::System.StringComparison.Ordinal) ?? false)
            {
                returnValue = new GetDataSourceDefinitions_DataSourceDefinitions_Columns_ExportedColumnData(data.Name, data.ValueType ?? throw new global::System.ArgumentNullException());
            }
            else
            {
                throw new global::System.NotSupportedException();
            }

            return returnValue;
        }
    }
}

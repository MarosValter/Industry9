// <auto-generated/>
#nullable enable

namespace industry9.Client.Data.GraphQL.Generated
{
    /// <summary>
    /// Represents the operation service of the FetchRandomDataSourceProperties GraphQL operation
    /// <code>
    /// query FetchRandomDataSourceProperties($id: ID!) {
    ///   fetchRandomPropertiesFromDataSource(dataSourceId: $id) {
    ///     __typename
    ///     min
    ///     max
    ///   }
    /// }
    /// </code>
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "11.2.2.0")]
    public interface IFetchRandomDataSourcePropertiesQuery : global::StrawberryShake.IOperationRequestFactory
    {
        global::System.Threading.Tasks.Task<global::StrawberryShake.IOperationResult<IFetchRandomDataSourcePropertiesResult>> ExecuteAsync(global::System.String id, global::System.Threading.CancellationToken cancellationToken = default);
        global::System.IObservable<global::StrawberryShake.IOperationResult<IFetchRandomDataSourcePropertiesResult>> Watch(global::System.String id, global::StrawberryShake.ExecutionStrategy? strategy = null);
    }
}

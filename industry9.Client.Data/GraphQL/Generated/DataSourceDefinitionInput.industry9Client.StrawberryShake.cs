// <auto-generated/>
#nullable enable

namespace industry9.Client.Data.GraphQL.Generated
{
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "11.2.2.0")]
    public partial class DataSourceDefinitionInput : global::industry9.Client.Data.GraphQL.Generated.State.IDataSourceDefinitionInputInfo, global::System.IEquatable<DataSourceDefinitionInput>
    {
        public override global::System.Boolean Equals(global::System.Object? obj)
        {
            if (ReferenceEquals(null, obj))
            {
                return false;
            }

            if (ReferenceEquals(this, obj))
            {
                return true;
            }

            if (obj.GetType() != GetType())
            {
                return false;
            }

            return Equals((DataSourceDefinitionInput)obj);
        }

        public virtual global::System.Boolean Equals(DataSourceDefinitionInput? other)
        {
            if (ReferenceEquals(null, other))
            {
                return false;
            }

            if (ReferenceEquals(this, other))
            {
                return true;
            }

            if (other.GetType() != GetType())
            {
                return false;
            }

            return (((Id is null && other.Id is null) || Id != null && Id.Equals(other.Id))) && Name.Equals(other.Name) && Type.Equals(other.Type) && global::StrawberryShake.Helper.ComparisonHelper.SequenceEqual(Inputs, other.Inputs) && global::StrawberryShake.Helper.ComparisonHelper.SequenceEqual(Columns, other.Columns);
        }

        public override global::System.Int32 GetHashCode()
        {
            unchecked
            {
                int hash = 5;
                if (Id != null)
                {
                    hash ^= 397 * Id.GetHashCode();
                }

                hash ^= 397 * Name.GetHashCode();
                hash ^= 397 * Type.GetHashCode();
                if (Inputs != null)
                {
                    foreach (var Inputs_elm in Inputs)
                    {
                        if (Inputs_elm != null)
                        {
                            hash ^= 397 * Inputs_elm.GetHashCode();
                        }
                    }
                }

                if (Columns != null)
                {
                    foreach (var Columns_elm in Columns)
                    {
                        if (Columns_elm != null)
                        {
                            hash ^= 397 * Columns_elm.GetHashCode();
                        }
                    }
                }

                return hash;
            }
        }

        private global::System.String? _value_id;
        private global::System.Boolean _set_id;
        private global::System.String _value_name = default !;
        private global::System.Boolean _set_name;
        private global::industry9.Client.Data.GraphQL.Generated.DataSourceType _value_type;
        private global::System.Boolean _set_type;
        private global::System.Collections.Generic.IReadOnlyList<global::System.String?>? _value_inputs;
        private global::System.Boolean _set_inputs;
        private global::System.Collections.Generic.IReadOnlyList<global::industry9.Client.Data.GraphQL.Generated.ExportedColumnDataInput?>? _value_columns;
        private global::System.Boolean _set_columns;
        public global::System.String? Id
        {
            get => _value_id;
            set
            {
                _set_id = true;
                _value_id = value;
            }
        }

        global::System.Boolean global::industry9.Client.Data.GraphQL.Generated.State.IDataSourceDefinitionInputInfo.IsIdSet => _set_id;
        public global::System.String Name
        {
            get => _value_name;
            set
            {
                _set_name = true;
                _value_name = value;
            }
        }

        global::System.Boolean global::industry9.Client.Data.GraphQL.Generated.State.IDataSourceDefinitionInputInfo.IsNameSet => _set_name;
        public global::industry9.Client.Data.GraphQL.Generated.DataSourceType Type
        {
            get => _value_type;
            set
            {
                _set_type = true;
                _value_type = value;
            }
        }

        global::System.Boolean global::industry9.Client.Data.GraphQL.Generated.State.IDataSourceDefinitionInputInfo.IsTypeSet => _set_type;
        public global::System.Collections.Generic.IReadOnlyList<global::System.String?>? Inputs
        {
            get => _value_inputs;
            set
            {
                _set_inputs = true;
                _value_inputs = value;
            }
        }

        global::System.Boolean global::industry9.Client.Data.GraphQL.Generated.State.IDataSourceDefinitionInputInfo.IsInputsSet => _set_inputs;
        public global::System.Collections.Generic.IReadOnlyList<global::industry9.Client.Data.GraphQL.Generated.ExportedColumnDataInput?>? Columns
        {
            get => _value_columns;
            set
            {
                _set_columns = true;
                _value_columns = value;
            }
        }

        global::System.Boolean global::industry9.Client.Data.GraphQL.Generated.State.IDataSourceDefinitionInputInfo.IsColumnsSet => _set_columns;
    }
}

// <auto-generated/>
#nullable enable

namespace industry9.Client.Data.GraphQL.Generated
{
    /// <summary>
    /// Represents the operation service of the RemoveWidgetFromDashboard GraphQL operation
    /// <code>
    /// mutation RemoveWidgetFromDashboard($dashboardId: ID!, $widgetId: ID!) {
    ///   removeWidgetFromDashboard(dashboardId: $dashboardId, widgetId: $widgetId)
    /// }
    /// </code>
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "11.2.2.0")]
    public interface IRemoveWidgetFromDashboardMutation : global::StrawberryShake.IOperationRequestFactory
    {
        global::System.Threading.Tasks.Task<global::StrawberryShake.IOperationResult<IRemoveWidgetFromDashboardResult>> ExecuteAsync(global::System.String dashboardId, global::System.String widgetId, global::System.Threading.CancellationToken cancellationToken = default);
        global::System.IObservable<global::StrawberryShake.IOperationResult<IRemoveWidgetFromDashboardResult>> Watch(global::System.String dashboardId, global::System.String widgetId, global::StrawberryShake.ExecutionStrategy? strategy = null);
    }
}

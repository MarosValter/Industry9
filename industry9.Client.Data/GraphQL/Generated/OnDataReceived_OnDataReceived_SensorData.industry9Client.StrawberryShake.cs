// <auto-generated/>
#nullable enable

namespace industry9.Client.Data.GraphQL.Generated
{
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "11.2.2.0")]
    public partial class OnDataReceived_OnDataReceived_SensorData : global::System.IEquatable<OnDataReceived_OnDataReceived_SensorData>, IOnDataReceived_OnDataReceived_SensorData
    {
        public OnDataReceived_OnDataReceived_SensorData(global::System.String? name, global::System.Double @value, global::System.String? dataSourceId, global::System.DateTimeOffset timestamp)
        {
            Name = name;
            Value = @value;
            DataSourceId = dataSourceId;
            Timestamp = timestamp;
        }

        public global::System.String? Name { get; }

        public global::System.Double Value { get; }

        public global::System.String? DataSourceId { get; }

        public global::System.DateTimeOffset Timestamp { get; }

        public virtual global::System.Boolean Equals(OnDataReceived_OnDataReceived_SensorData? other)
        {
            if (ReferenceEquals(null, other))
            {
                return false;
            }

            if (ReferenceEquals(this, other))
            {
                return true;
            }

            if (other.GetType() != GetType())
            {
                return false;
            }

            return (((Name is null && other.Name is null) || Name != null && Name.Equals(other.Name))) && Value == other.Value && ((DataSourceId is null && other.DataSourceId is null) || DataSourceId != null && DataSourceId.Equals(other.DataSourceId)) && Timestamp.Equals(other.Timestamp);
        }

        public override global::System.Boolean Equals(global::System.Object? obj)
        {
            if (ReferenceEquals(null, obj))
            {
                return false;
            }

            if (ReferenceEquals(this, obj))
            {
                return true;
            }

            if (obj.GetType() != GetType())
            {
                return false;
            }

            return Equals((OnDataReceived_OnDataReceived_SensorData)obj);
        }

        public override global::System.Int32 GetHashCode()
        {
            unchecked
            {
                int hash = 5;
                if (Name != null)
                {
                    hash ^= 397 * Name.GetHashCode();
                }

                hash ^= 397 * Value.GetHashCode();
                if (DataSourceId != null)
                {
                    hash ^= 397 * DataSourceId.GetHashCode();
                }

                hash ^= 397 * Timestamp.GetHashCode();
                return hash;
            }
        }
    }
}

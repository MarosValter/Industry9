// <auto-generated/>
#nullable enable

namespace industry9.Client.Data.GraphQL.Generated
{
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "11.2.2.0")]
    public partial class FetchRandomDataSourcePropertiesResult : global::System.IEquatable<FetchRandomDataSourcePropertiesResult>, IFetchRandomDataSourcePropertiesResult
    {
        public FetchRandomDataSourcePropertiesResult(global::industry9.Client.Data.GraphQL.Generated.IFetchRandomDataSourceProperties_FetchRandomPropertiesFromDataSource? fetchRandomPropertiesFromDataSource)
        {
            FetchRandomPropertiesFromDataSource = fetchRandomPropertiesFromDataSource;
        }

        public global::industry9.Client.Data.GraphQL.Generated.IFetchRandomDataSourceProperties_FetchRandomPropertiesFromDataSource? FetchRandomPropertiesFromDataSource { get; }

        public virtual global::System.Boolean Equals(FetchRandomDataSourcePropertiesResult? other)
        {
            if (ReferenceEquals(null, other))
            {
                return false;
            }

            if (ReferenceEquals(this, other))
            {
                return true;
            }

            if (other.GetType() != GetType())
            {
                return false;
            }

            return (((FetchRandomPropertiesFromDataSource is null && other.FetchRandomPropertiesFromDataSource is null) || FetchRandomPropertiesFromDataSource != null && FetchRandomPropertiesFromDataSource.Equals(other.FetchRandomPropertiesFromDataSource)));
        }

        public override global::System.Boolean Equals(global::System.Object? obj)
        {
            if (ReferenceEquals(null, obj))
            {
                return false;
            }

            if (ReferenceEquals(this, obj))
            {
                return true;
            }

            if (obj.GetType() != GetType())
            {
                return false;
            }

            return Equals((FetchRandomDataSourcePropertiesResult)obj);
        }

        public override global::System.Int32 GetHashCode()
        {
            unchecked
            {
                int hash = 5;
                if (FetchRandomPropertiesFromDataSource != null)
                {
                    hash ^= 397 * FetchRandomPropertiesFromDataSource.GetHashCode();
                }

                return hash;
            }
        }
    }
}

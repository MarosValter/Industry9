// <auto-generated/>
#nullable enable

namespace industry9.Client.Data.GraphQL.Generated
{
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "11.2.2.0")]
    public partial class GetDashboard_Dashboard_Dashboard : global::System.IEquatable<GetDashboard_Dashboard_Dashboard>, IGetDashboard_Dashboard_Dashboard
    {
        public GetDashboard_Dashboard_Dashboard(global::System.String id, global::System.String? name, global::System.Boolean @private, global::System.Int32 columnCount, global::System.String? authorId, global::System.DateTimeOffset created, global::System.Collections.Generic.IReadOnlyList<global::industry9.Client.Data.GraphQL.Generated.IGetDashboard_Dashboard_Labels?>? labels, global::System.Collections.Generic.IReadOnlyList<global::industry9.Client.Data.GraphQL.Generated.IGetDashboard_Dashboard_Widgets?>? widgets)
        {
            Id = id;
            Name = name;
            Private = @private;
            ColumnCount = columnCount;
            AuthorId = authorId;
            Created = created;
            Labels = labels;
            Widgets = widgets;
        }

        public global::System.String Id { get; }

        public global::System.String? Name { get; }

        public global::System.Boolean Private { get; }

        public global::System.Int32 ColumnCount { get; }

        public global::System.String? AuthorId { get; }

        public global::System.DateTimeOffset Created { get; }

        public global::System.Collections.Generic.IReadOnlyList<global::industry9.Client.Data.GraphQL.Generated.IGetDashboard_Dashboard_Labels?>? Labels { get; }

        public global::System.Collections.Generic.IReadOnlyList<global::industry9.Client.Data.GraphQL.Generated.IGetDashboard_Dashboard_Widgets?>? Widgets { get; }

        public virtual global::System.Boolean Equals(GetDashboard_Dashboard_Dashboard? other)
        {
            if (ReferenceEquals(null, other))
            {
                return false;
            }

            if (ReferenceEquals(this, other))
            {
                return true;
            }

            if (other.GetType() != GetType())
            {
                return false;
            }

            return (Id.Equals(other.Id)) && ((Name is null && other.Name is null) || Name != null && Name.Equals(other.Name)) && Private == other.Private && ColumnCount == other.ColumnCount && ((AuthorId is null && other.AuthorId is null) || AuthorId != null && AuthorId.Equals(other.AuthorId)) && Created.Equals(other.Created) && global::StrawberryShake.Helper.ComparisonHelper.SequenceEqual(Labels, other.Labels) && global::StrawberryShake.Helper.ComparisonHelper.SequenceEqual(Widgets, other.Widgets);
        }

        public override global::System.Boolean Equals(global::System.Object? obj)
        {
            if (ReferenceEquals(null, obj))
            {
                return false;
            }

            if (ReferenceEquals(this, obj))
            {
                return true;
            }

            if (obj.GetType() != GetType())
            {
                return false;
            }

            return Equals((GetDashboard_Dashboard_Dashboard)obj);
        }

        public override global::System.Int32 GetHashCode()
        {
            unchecked
            {
                int hash = 5;
                hash ^= 397 * Id.GetHashCode();
                if (Name != null)
                {
                    hash ^= 397 * Name.GetHashCode();
                }

                hash ^= 397 * Private.GetHashCode();
                hash ^= 397 * ColumnCount.GetHashCode();
                if (AuthorId != null)
                {
                    hash ^= 397 * AuthorId.GetHashCode();
                }

                hash ^= 397 * Created.GetHashCode();
                if (Labels != null)
                {
                    foreach (var Labels_elm in Labels)
                    {
                        if (Labels_elm != null)
                        {
                            hash ^= 397 * Labels_elm.GetHashCode();
                        }
                    }
                }

                if (Widgets != null)
                {
                    foreach (var Widgets_elm in Widgets)
                    {
                        if (Widgets_elm != null)
                        {
                            hash ^= 397 * Widgets_elm.GetHashCode();
                        }
                    }
                }

                return hash;
            }
        }
    }
}

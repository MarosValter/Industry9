// <auto-generated/>
#nullable enable

namespace industry9.Client.Data.GraphQL.Generated
{
    /// <summary>
    /// Represents the operation service of the GetDataSourceDefinition GraphQL operation
    /// <code>
    /// query GetDataSourceDefinition($id: ID!) {
    ///   dataSourceDefinition(id: $id) {
    ///     __typename
    ///     ... DataSourceDefinitionDetail
    ///     ... on DataSourceDefinition {
    ///       id
    ///     }
    ///   }
    /// }
    /// 
    /// fragment DataSourceDefinitionDetail on DataSourceDefinition {
    ///   id
    ///   name
    ///   created
    ///   type
    ///   inputs
    ///   columns {
    ///     __typename
    ///     ... ExportedColumn
    ///   }
    /// }
    /// 
    /// fragment ExportedColumn on ExportedColumnData {
    ///   name
    ///   valueType
    /// }
    /// </code>
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "11.2.2.0")]
    public interface IGetDataSourceDefinitionQuery : global::StrawberryShake.IOperationRequestFactory
    {
        global::System.Threading.Tasks.Task<global::StrawberryShake.IOperationResult<IGetDataSourceDefinitionResult>> ExecuteAsync(global::System.String id, global::System.Threading.CancellationToken cancellationToken = default);
        global::System.IObservable<global::StrawberryShake.IOperationResult<IGetDataSourceDefinitionResult>> Watch(global::System.String id, global::StrawberryShake.ExecutionStrategy? strategy = null);
    }
}

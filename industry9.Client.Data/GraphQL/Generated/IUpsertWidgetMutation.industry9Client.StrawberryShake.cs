// <auto-generated/>
#nullable enable

namespace industry9.Client.Data.GraphQL.Generated
{
    /// <summary>
    /// Represents the operation service of the UpsertWidget GraphQL operation
    /// <code>
    /// mutation UpsertWidget($widget: WidgetInput!) {
    ///   upsertWidget(widget: $widget)
    /// }
    /// </code>
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "11.2.2.0")]
    public interface IUpsertWidgetMutation : global::StrawberryShake.IOperationRequestFactory
    {
        global::System.Threading.Tasks.Task<global::StrawberryShake.IOperationResult<IUpsertWidgetResult>> ExecuteAsync(global::industry9.Client.Data.GraphQL.Generated.WidgetInput widget, global::System.Threading.CancellationToken cancellationToken = default);
        global::System.IObservable<global::StrawberryShake.IOperationResult<IUpsertWidgetResult>> Watch(global::industry9.Client.Data.GraphQL.Generated.WidgetInput widget, global::StrawberryShake.ExecutionStrategy? strategy = null);
    }
}
